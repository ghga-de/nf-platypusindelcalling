/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-platypusindelcalling Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                      = null

    // workflow parameters

    // Post Processes
    runIndelAnnotation         = false
    runIndelDeepAnnotation     = false
    runIndelVCFFilter          = false
    runTinda                   = false
    skip_multiqc               = false
    standard_vcf               = true

    // Annotate Table options
    padding                    = 10            // default value 
    minoverlapfraction         = 0.7           // default value
    maxborderdist              = 20            // default value
    maxmatches                 = 5             // default value
 
    // Filtering options
    min_confidence_score       = 8             // default value: 8 
    crit_gnomad_exomes_maxmaf  = 0             // default value: 0.001 
    crit_gnomad_genomes_maxmaf = 0             // default value: 0.001 
    crit_exac_maxmaf           = 0             // default value: 0.01
    crit_evs_maxmaf            = 0             // default value: 1.0 
    crit_1kgenomes_maxmaf      = 0             // default value: 0.01
    crit_localcontrol_maxmaf   = 0             // default value: 0.05
    filter_non_clinic          = false         // default value: false

    // screenshot options
    max_var_screenshots        = 100           // default value 
    window_size                = 100           // default value 

    // runtinda options
    seqtype                    = 'WGS'         //  WES/WGS 
    right_border               = 0.45          // default value 
    bottom_border              = 0.01          // default value 
    maf_threshold              = 0.001         // default value 

    //// Files ///

    // References
    data_path                  = null           // If database files in the same place 
    genome                     = "GRCh38"       // use igenome or refgenie genome bundle  - GRCh38, GRCh37, hg38 or hg37

    // Annovar files
    annotation_tool            = "vep"  // or vep
    annovar_path               = null       // path/to/annovar

    outdir_cache               = null  // No output directory for cache
    vep_cache                  = null  // No directory for VEP cache
    download_cache             = false // DO NOT Download annotation cache

    // Basic Annotation files
    k_genome                   = null        // 1000k genome indels (integrated calls in vcf.gz format along with index)
    dbsnp_indel                = null        // dbSNP indels ( in vcf.gz format along with index)
    exac_file                  = null        // ExAC file (integrated calls in vcf.gz format along with index)
    evs_file                   = null        // EVS (integrated calls in vcf.gz format along with index)   
    local_control_wgs          = null        // Local Control WGS (integrated calls in vcf.gz format along with index)
    local_control_wes          = null        // Local Control WES(integrated calls in vcf.gz format along with index)      
    gnomad_genomes             = null        // gnomAD genome INDELs (integrated calls in vcf.gz format along with index)
    gnomad_exomes              = null        // gnomAD exome INDELs (integrated calls in vcf.gz format along with index)


    // INDEL reability files 
    repeat_masker              = null        // UCSC Repeat Masker file (integrated calls in bed.gz format along with index) 
    dac_blacklist              = null        // UCSC DAC blacklist file (integrated calls in bed.gz format along with index) 
    duke_excluded              = null        // UCSC DUKE Excluded file (integrated calls in bed.gz format along with index) 
    hiseq_depth                = null        // UCSC HiSEQ Depth file (integrated calls in bed.gz format along with index) 
    self_chain                 = null        // UCSC Self Chain file (integrated calls in bed.gz format along with index) 
    mapability_file            = null        // UCSC Mappability file (integrated calls in bed.gz format along with index) 
    simple_tandemrepeats       = null        // UCSC Simple Tandem repeats file (integrated calls in bed.gz format along with index) 

    // Deep Annotation files
    enchancer_file             = null        // UCSC Enhangers file (integrated calls in bed.gz format along with index) 
    cpgislands_file            = null        // UCSC CpG Islands file (integrated calls in bed.gz format along with index) 
    tfbscons_file              = null        // UCSC TFBS noncoding side file (integrated calls in bed.gz format along with index)  
    encode_dnase_file          = null        // UCSC ENCODE DNAase cluster regions file (integrated calls in bed.gz format along with index) 
    mirnas_snornas_file        = null        // miRNA snoRNAs file (integrated calls in bed.gz format along with index) 
    mirna_sncrnas_file         = null        // miRNA sncRNAs file (integrated calls in bed.gz format along with index) 
    mirbase_file               = null        // mirBASE file (integrated calls in bed.gz format along with index) 
    cosmic_file                = null        // COSMIC database file (integrated calls in bed.gz format along with index) 
    mir_targets_file           = null        // miRNA targets file (integrated calls in bed.gz format along with index) 
    cgi_mountains_file         = null        // UCSC CGI mountains file (integrated calls in bed.gz format along with index) 
    phastconselem_file         = null        // UCSC Phast Cons Element regions file (integrated calls in bed.gz format along with index) 
    encode_tfbs_file           = null        // UCSC ENCODE TFBS cluster regions file (integrated calls in bed.gz format along with index) 

    // TiNDA files
    genemodel_bed              = null       // Gencode file (integrated calls in bed.gz format along with index)
    local_control_tinda_wgs    = null       // Local Control WGS (integrated calls in vcf.gz format along with index)
    local_control_tinda_wes    = null       // Local Control WES (integrated calls in vcf.gz format along with index)
    gnomad_genomes_tinda       = null       // gnomAD genome INDELs (integrated calls in vcf.gz format along with index)
    gnomad_exomes_tinda        = null       // gnomAD exome INDELs (integrated calls in vcf.gz format along with index)

    // igenome References options
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    igenomes_ignore            = false
    save_reference             = false      // Built references not saved

    // refgenie References options
    refgenie_ignore            = false
    refgenie_base              = "/omics/groups/OE0608/internal/kubran/"

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    max_multiqc_email_size     = '25.MB'

    // Boilerplate options
    outdir                     = 'results'
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    help                       = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = "reference,input_paths,cluster-options,clusterOptions,project,data_path,gnomadgenomes,gnomadexomes,dbsnp_snv "
    enable_conda               = false

    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/platypusindelcalling custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific instititutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/platypusindelcalling.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/platypusindelcalling profiles: ${params.custom_config_base}/pipeline/platypusindelcalling.config")
// }


profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }

    test              { includeConfig 'conf/test.config'              }
    dkfz_cluster_37   { includeConfig 'conf/dkfz_cluster_37.config'   }
    dkfz_cluster_38   { includeConfig 'conf/dkfz_cluster_38.config'   }
    test_igenomes_38  { includeConfig 'conf/test_igenomes_38.config'  }
    test_refgenie_38  { includeConfig 'conf/test_refgenie_38.config'  }

}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}

// Load refgenie build genome_config.yaml file
if (!params.refgenie_ignore) {
    includeConfig 'conf/refgenie.config'
} else {
    params.genomes = [:]
}


// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}
prov {
    enabled = true
    formats {
        bco {
            file = "${params.outdir}/pipeline_info/manifest_${trace_timestamp}.bco.json"
        }
    }
}

manifest {
    name            = 'nf-platypusindelcalling'
    author          = 'Kuebra Narci kuebra.narci@dkfz-heidelberg.de'
    homePage        = 'https://github.com/ghga-de/nf-platypusindelcalling'
    description     = 'ODCF Platypus based indel calling pipeline'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.10.1'
    version         = '1.0dev'
}
// Nextflow plugins
plugins {
    id 'nf-prov@1.2.2'       // Provenance reports for pipeline runs
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}

process.scratch=true
