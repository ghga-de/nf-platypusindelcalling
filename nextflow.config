/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-platypusindelcalling Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                      = null

    // workflow parameters
    outdir                     = 'results'


    // Post Processes
    runIndelAnnotation         = true
    runIndelDeepAnnotation     = false
    runIndelVCFFilter          = false
    runTinda                   = false
    skip_multiqc               = false

    //Platypus options
    optimized                  = " --genIndels=1 --genSNPs=1 --verbosity=1 --bufferSize=100000 --maxReads=5000000 --minFlank=0"

    // Annotate Table options
    padding                    = 10                     // default value 
    minoverlapfraction         = 0.7                    // default value
    maxborderdist              = 20                     // default value
    maxmatches                 = 5                      // default value

    // Annovar
    // only option is hg19 now!
    buildver                   = 'hg19'                    // default value
    dbtype                     = 'wgEncodeGencodeCompV19'  // default value
    segdupcol                  = '"SEGDUP"'                // default value
    cytobandcol                = '"CYTOBAND"'              // default value
    geneannocols               = '"ANNOVAR_FUNCTION,GENE,EXONIC_CLASSIFICATION,ANNOVAR_TRANSCRIPTS"' // default value

    // confidence annotation options
    confidence_opts_indel      = ""                        // default value

    //// filtering options: only if there is no control these filtering measures will be applied
    // add " EVS MAF VALUE+" to filter_values parameter for EVS db (1)
    // add " ExAC AF VALUE+" to filter_values parameter for ExAC db (0.01)
    // add " GNOMAD_EXOMES AF VALUE+" to filter_values parameterfor gnomAD exomes db (0.001)
    // add " GNOMAD_GENOMES AF VALUE+" to filter_values parameter for gnomAD genomes db (0.001)
    // add " DBSNP CLN,COMMON nonexist,exist" to filter_values parameter to filtering clinical variants
    // add " 1K_GENOMES EUR_AF VALUE+" to filter_values parameter for 1k genomes db  for EUR (0.01)
    // add " LocalControlAF_WGS AF VALUE+ LocalControlAF_WES AF VALUE+" to filter_values parameter for Local control (0.01)
    // add " LocalControlAF_WGS . VALUE+" to filter_values parameter to filter recurrance (7)

    min_confidence_score       = 8             // default value 
    //example for filtration
    filter_values              = " GNOMAD_EXOMES AF 0.001+ GNOMAD_GENOMES AF 0.001+ EVS MAF 1+ ExAC AF 0.01+ DBSNP CLN,COMMON nonexist,exist 1K_GENOMES EUR_AF 0.01+ LocalControlAF_WGS AF 0.01+ LocalControlAF_WES AF 0.01+ LocalControlAF_WGS . 7+"

    // screenshot options
    max_var_screenshots        = 100           // default value 
    window_size                = 100           // default value 
    repeat_masker              = ''            // default value 

    // runtinda options
    normal_header_pattern      = 'control'     // default value 
    tumor_header_pattern       = 'tumor'       // default value 
    seqtype                    = 'WES'         // default value 
    right_border               = 0.45          // default value 
    bottom_border              = 0.01          // default value 
    maf_threshold              = 0.001         // default value 


    // Files //
    db_base_dir                = null          // If database files in the same place 
    reference                  = null          // path/ref.fa with fai

    // Annotation files
    k_genome                   = null
    dbsnp_indel                = null
    exac_file                  = null
    evs_file                   = null
    local_control_wgs          = null
    local_control_wes          = null
    gnomad_genomes             = null
    gnomad_exomes              = null

    // Annovar files
    table_folder               = null       // path/to/annovar/humandb/
    annovar_path               = null       // path/to/annovar

    // INDEL reability files 
    repeat_masker              = null
    dac_blacklist              = null
    duke_excluded              = null
    hiseq_depth                = null
    self_chain                 = null
    mapability_file            = null
    simple_tandemrepeats       = null

    // Deep Annotation files
    enchancer_file             = null
    cpgislands_file            = null
    tfbscons_file              = null
    encode_dnase_file          = null
    mirnas_snornas_file        = null
    mirbase_file               = null
    cosmic_file                = null 
    mir_targets_file           = null
    cgi_mountains_file         = null
    phastconselem_file         = null
    encode_tfbs_file           = null

    // TiNDA files
    chrlength_file             = null
    genemodel_bed              = null

    // igenome References
    genome                     = null
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    igenomes_ignore            = false
    save_reference             = false     // Built references not saved

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    max_multiqc_email_size     = '25.MB'

    // Boilerplate options
    outdir                     = 'results'
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    help                       = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'
    enable_conda               = false

    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/platypusindelcalling custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific instititutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/platypusindelcalling.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/platypusindelcalling profiles: ${params.custom_config_base}/pipeline/platypusindelcalling.config")
// }


profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }

    test              { includeConfig 'conf/test.config'              }
    dkfz_cluster      { includeConfig 'conf/dkfz_cluster.config'      }
    test_full         { includeConfig 'conf/test_full.config'         }
}

// Load igenomes.config if required
//if (!params.igenomes_ignore) {
//    includeConfig 'conf/igenomes.config'
//} else {
//    params.genomes = [:]
//}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-platypusindelcalling'
    author          = 'Kuebra Narci kuebra.narci@dkfz-heidelberg.de'
    homePage        = 'https://github.com/kubranarci/nf-platypusindelcalling'
    description     = 'ODCF Platypus based indel calling pipeline'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=21.10.3'
    version         = '1.0dev'
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}

process.scratch=true
