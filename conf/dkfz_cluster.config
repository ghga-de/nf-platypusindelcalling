/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run main.nf -profile dkfz_cluster,singularity --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_contact     = 'Kübra Narcı kuebra.narci@dkfz-heidelberg.de'
    config_profile_name        = 'Test profile for DKFZ cluster'
    config_profile_description = 'Test dataset for to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 30
    max_memory = '250.GB'
    max_time   = '48.h'

    // Input data
    input  = 'assets/samplesheet_cluster.csv'

    // workflow parameters
    outdir                     = "results"

    // Post Processes
    runIndelAnnotation         = true
    runIndelDeepAnnotation     = true
    runIndelVCFFilter          = true
    runTinda                   = true
    skip_multiqc               = false


    // Annotate Table options
    padding                    = 10
    minoverlapfraction         = 0.7
    maxborderdist              = 20
    maxmatches                 = 5

    // Annovar
    // only option is hg19 now!

    buildver                   = "hg19"
    dbtype                     = "wgEncodeGencodeCompV19"
    segdupcol                  = "SEGDUP"
    cytobandcol                = "CYTOBAND"
    geneannocols               = '"ANNOVAR_FUNCTION,GENE,EXONIC_CLASSIFICATION,ANNOVAR_TRANSCRIPTS"'

    // Filtering options
    min_confidence_score       = 7
    filter_exac                = false
    filter_evs                 = false
    filter_1kgenomes           = false
    filter_recurrance          = false
    filter_localcontrol        = false
    filter_non_clinic          = false
    crit_exac_maxmaf           = 0.01
    crit_evs_maxmaf            = 1.0
    crit_1kgenomes_maxmaf      = 0.01
    crit_recurrance            = 7
    crit_localcontrol_maxmaf   = 0.01

    // screenshot options
    max_var_screenshots        = 100
    window_size                = 100

    // runtinda options
    seqtype                    = "WGS"
    right_border               = 0.45
    bottom_border              = 0.01
    maf_threshold              = 0.001

    // Reference //
    data_path                  ="/omics/odcf/reference_data/legacy/ngs_share/assemblies/hg19_GRCh37_1000genomes"
    ref_type                   ="hg37" 
    reference                  ="${params.data_path}/sequence/1KGRef_Phix/hs37d5_PhiX.fa"
    chrlength_file             ="${params.data_path}/stats/hs37d5.fa.chrLenOnlyACGT_realChromosomes.tab"
    chr_prefix                 = ""
    genome                     = 'genome.fa'
    fasta                      = 'genome.fa'

    // Annotation files
    k_genome                   ="${params.data_path}/databases/1000genomes/ALL.wgs.phase1_integrated_calls.20101123.indels_plain.vcf.gz"
    dbsnp_indel                ="${params.data_path}/databases/dbSNP/dbSNP_147/00-All.INDEL.vcf.gz"
    exac_file                  ="${params.data_path}/databases/ExAC/ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz"
    evs_file                   ="${params.data_path}/databases/EVS/ESP6500SI-V2-SSA137.updatedProteinHgvs.ALL.snps_indels.vcf.gz"
    local_control_wgs          ="${params.data_path}/databases/LocalControls/ExclusionList_2019/MPsnvs_PLindels/ExclusionList_2019_HIPO-PCAWG_MP_PL_WGS.INDELs.AFgt1.vcf.gz"
    local_control_wes          ="${params.data_path}/databases/LocalControls/ExclusionList_2019/MPsnvs_PLindels/ExclusionList_2019_H021_MP_PL_WES.INDELs.AFgt1.vcf.gz"
    gnomad_genomes             ="${params.data_path}/databases/gnomAD/gnomad_v2.1/gnomad.genomes.r2.1.sites.SNV-INDEL.vcf.gz"
    gnomad_exomes              ="${params.data_path}/databases/gnomAD/gnomad_v2.1/gnomad.exomes.r2.1.sites.SNV-INDEL.vcf.gz"

    // Annovar
    annovar_path               ="/omics/odcf/reference_data/legacy/ngs_share/annovar/annovar_Feb2016"

    // INDEL reability files
    repeat_masker              ="${params.data_path}/databases/UCSC/Sept2013/UCSC_27Sept2013_RepeatMasker.bed.gz"
    dac_blacklist              ="${params.data_path}/databases/UCSC/DACBlacklist_chr.bed.gz"
    duke_excluded              ="${params.data_path}/databases/UCSC/DukeExcluded_chr.bed.gz"
    hiseq_depth                ="${params.data_path}/databases/UCSC/HiSeqDepthTop10Pct_chr.bed.gz"
    self_chain                 ="${params.data_path}/databases/UCSC/selfChain_chr.bed.gz"
    mapability_file            ="${params.data_path}/databases/UCSC/wgEncodeCrgMapabilityAlign100mer_chr.bedGraph.gz"
    simple_tandemrepeats       ="${params.data_path}/databases/UCSC/repeats/SimpleTandemRepeats_chr.bed.gz"

    // Deep Annotation files
    cpgislands_file            ="${params.data_path}/databases/UCSC/Sept2013/UCSC_27Sept2013_CpG_islands.bed.gz"
    tfbscons_file              ="${params.data_path}/databases/UCSC/tfbsConsSites_noncoding_merged_chr.bed.gz"
    encode_dnase_file          ="${params.data_path}/databases/UCSC/Sept2013/UCSC_27Sept2013_DNase_cluster_V2.bed.gz"
    mirnas_snornas_file        ="${params.data_path}/databases/miRNA/miRNA_snoRNAs_miRBaseRelease15_chr.bed.gz"
    mirbase_file               ="${params.data_path}/databases/miRNA/miRBase_version-18_chr.bed.gz"
    cosmic_file                ="${params.data_path}/databases/COSMIC/Cosmic_v77_hg19_coding_SNVs.bed.gz"
    mir_targets_file           ="${params.data_path}/databases/miRNA/miRNAsites_TargetScan_BartelLab_2011_01_14_chr.bed.gz"
    cgi_mountains_file         ="${params.data_path}/CustomDeepAnnotation/CgiMountains_chr.bed.gz"
    phastconselem_file         ="${params.data_path}/databases/UCSC/phastConsElem_min20bp_chr.bed.gz"
    encode_tfbs_file           ="${params.data_path}/databases/UCSC/Sept2013/UCSC_27Sept2013_wgEncodeRegTfbsClusteredV3.bed.gz"
    enchancer_file             ="${params.data_path}/databases/UCSC/Enhancers_Vista_2011_01_14_chr.bed.gz"

    // TiNDA files
    local_control_platypus_wgs ="${params.data_path}/databases/LocalControls/ExclusionList_2019/PLsnvs_PLindels/version3/ExclusionList_2019_HIPO-PCAWG_PL_WGS.SNVs-INDELs.AFgt1.vcf.gz"
    local_control_platypus_wes ="${params.data_path}/databases/LocalControls/ExclusionList_2019/PLsnvs_PLindels/version3/ExclusionList_2019_H021_PL_WES.SNVs-INDELs.AFgt1.vcf.gz"
    genemodel_bed              ="${params.data_path}/databases/gencode/gencode19/GencodeV19_Exons_plain.bed.gz"
}


// Perform work directory cleanup when the run has succesfully completed
 cleanup = true

// Reduce the job submit rate to about 5 per second, this way the server won't be bombarded with jobs
executor {
    submitRateLimit = '3 sec'
}

singularity {
  enabled = true
  cacheDir = "/omics/groups/OE0608/internal/kubran/singularity"
  autoMounts = true
  runOptions = "-B /omics/groups -B /omics/odcf/analysis -B /omics/odcf/project -B /omics/odcf/reference_data"
}
env {
    SINGULARITY_CACHEDIR="/omics/groups/OE0608/internal/kubran/singularity"
    SINGULARITY_LIBRARYDIR="/omics/groups/OE0608/internal/kubran/singularity/library"
}

process {
  executor = 'lsf'
  scratch = '$SCRATCHDIR/$LSB_JOBID'

}
executor {
  name = 'lsf'
  perTaskReserve = false
  perJobMemLimit = true
  queueSize = 10
  }
